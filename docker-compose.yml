version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: remesapay-postgres
    environment:
      POSTGRES_USER: remesapay_user
      POSTGRES_PASSWORD: secure_password_123
      POSTGRES_DB: remesapay_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - remesapay-network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: remesapay-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - remesapay-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: remesapay-backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://remesapay_user:secure_password_123@postgres:5432/remesapay_db
      - REDIS_URL=redis://redis:6379
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - remesapay-network
    restart: unless-stopped
    command: npm run dev

  # Frontend Next.js App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: remesapay-frontend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - remesapay-network
    restart: unless-stopped
    command: npm run dev

  # Hardhat Local Node (for development)
  hardhat:
    build:
      context: ./contracts
      dockerfile: Dockerfile.dev
    container_name: remesapay-hardhat
    ports:
      - "8545:8545"
    volumes:
      - ./contracts:/app
      - /app/node_modules
    networks:
      - remesapay-network
    restart: unless-stopped
    command: npx hardhat node --hostname 0.0.0.0

  # Nginx Reverse Proxy (optional, for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: remesapay-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - remesapay-network
    restart: unless-stopped
    profiles:
      - production

  # Grafana for monitoring (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: remesapay-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    ports:
      - "3003:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - remesapay-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Prometheus for metrics (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: remesapay-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - remesapay-network
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  remesapay-network:
    driver: bridge
