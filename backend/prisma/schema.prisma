// Simple Prisma schema for SQLite development
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Simple user model for phone-to-wallet mapping
model User {
  id            String   @id @default(cuid())
  phoneNumber   String   @unique @map("phone_number")
  walletAddress String   @map("wallet_address") // Required for receiving payments
  firstName     String?  @map("first_name")
  lastName      String?  @map("last_name")
  email         String?  @unique
  countryCode   String   @map("country_code") // +1, +52, +57, etc.
  country       String?  // USA, Mexico, Colombia, etc.
  isActive      Boolean  @default(true) @map("is_active")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  // Relations
  sentRemittances     Remittance[] @relation("SenderRemittances")
  receivedRemittances Remittance[] @relation("ReceiverRemittances")

  @@map("users")
}

// Simple remittance model
model Remittance {
  id              String   @id @default(cuid())
  senderId        String   @map("sender_id")
  receiverPhone   String   @map("receiver_phone")
  receiverId      String?  @map("receiver_id")
  
  // Amounts (as strings to avoid Decimal issues)
  amountUsd       String   @map("amount_usd")
  feeUsd          String   @map("fee_usd")
  
  // Transaction details
  status          String   @default("PENDING")
  txHash          String?  @map("tx_hash")
  network         String   @default("base")
  
  // Timestamps
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  
  // Relations
  sender          User     @relation("SenderRemittances", fields: [senderId], references: [id])
  receiver        User?    @relation("ReceiverRemittances", fields: [receiverId], references: [id])

  @@map("remittances")
}

// Simple merchant model
model Merchant {
  id              String   @id @default(cuid())
  businessName    String   @map("business_name")
  phone           String   @unique
  countryCode     String   @map("country_code") // +1, +52, +57, etc.
  email           String?  @unique
  address         String
  city            String
  country         String
  isActive        Boolean  @default(true) @map("is_active")
  walletAddress   String   @map("wallet_address") // Required for receiving payments
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("merchants")
}